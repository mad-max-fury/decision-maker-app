{"version":3,"sources":["components/Questions.js","components/Options.js","components/Pediction.js","App.js","index.js"],"names":["Questions","className","type","id","placeholder","Options","num","toString","Pediction","question","opts","rPQ","history","useHistory","useState","state","setState","handlePredict","optionLength","document","getElementById","children","length","childrens","childrensArr","i","classList","remove","randomNumber","Math","trunc","random","add","useEffect","handleNextPage","push","value","onClick","map","input","toggle","repeated","rQuestion","qCount","App","props","handleAddOption","optionsCreator","handleAnswerQuestions","inputs","querySelectorAll","q1","shift","yourQuestion","optionsforQuestion","repeatedQuestion","console","log","forEach","a","localeCompare","path","exact","this","Number","to","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8d8209e1.chunk.js","sourcesContent":["import './Questions.css'\r\n\r\nconst Questions = () => {\r\n  return (\r\n    <div className=\"Questions\">\r\n      <h1>Enter Question Here: </h1>\r\n      <input type=\"text\" id='q1' placeholder=\"Q: Ask Your Question Here\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Questions\r\n","import './Option.css'\r\n\r\nconst Options = ({ num }) => {\r\n  return (\r\n    <div className=\"options\">\r\n      <label>{num.toString() + '.'}</label>\r\n      <input type='text' id={'L' + num.toString()} placeholder={'Enter Answer'} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","\r\nimport { useState, useEffect } from \"react\"\r\nimport './Pediction.css'\r\nimport './Widget.css'\r\nimport { useHistory } from \"react-router\"\r\nconst Pediction = ({ question, opts, rPQ }) => {\r\n  // const childrens = document.getElementById('cOptions').children\r\n  // const childrensArr = [...childrens]\r\n  const history = useHistory()\r\n  const [state, setState] = useState(0)\r\n\r\n\r\n  const handlePredict = () => {\r\n\r\n    const optionLength = document.getElementById('cOptions').children.length\r\n    const childrens = document.getElementById('cOptions').children\r\n    const childrensArr = [...childrens]\r\n    for (let i = 0; i < childrensArr.length; i++) {\r\n      childrensArr[i].classList.remove('active')\r\n\r\n    }\r\n\r\n    const randomNumber = Math.trunc(Math.random() * optionLength)\r\n    setState(randomNumber)\r\n\r\n    for (let i = 0; i < childrensArr.length; i++) {\r\n      if (i === state) {\r\n        childrensArr[i].classList.add('active')\r\n        break\r\n      }\r\n\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    handlePredict()\r\n  }, [])\r\n  const handleNextPage = () => {\r\n    history.push('/')\r\n  }\r\n  const handleDisplay = () => {\r\n    var element = document.getElementById(\"repeated\");\r\n    element.classList.toggle(\"active\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        question.value === '' ?\r\n          <div className=\"qAWrapper\">\r\n            <div className=\"qA\" >\r\n              <h1>some random questions ?</h1>\r\n              <div className='cOptions' id={'cOptions'}>\r\n\r\n                <div id=\"1\"><label>1.</label> <span>Yes</span></div>\r\n                <div id='2'><label>2.</label> <span>No</span></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"widget\">\r\n              <button onClick={handlePredict}> ↻ Ask Again ?</button>\r\n              <button onClick={handleNextPage}>Get Another Random Answer</button>\r\n              <button onClick={handleNextPage}>Ask Another Random Question</button>\r\n            </div>\r\n          </div>\r\n          : <div className=\"qAWrapper\">\r\n            <div className=\"qA\" >\r\n              <h1>{question.value + ' ?'}</h1>\r\n              <div className='cOptions' id=\"cOptions\">\r\n                {\r\n                  opts.map((input, i) => {\r\n                    return <div id={i + 1} key={i}><label>{i + 1}.</label> <span>{input.value}</span></div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"widget\">\r\n              <button onClick={handlePredict}> ↻ Ask Again ?</button>\r\n              <button onClick={handleNextPage}>Get Another Random Answer</button>\r\n              <button onClick={handleNextPage}>Ask Another Random Question</button>\r\n              <button onClick={handleDisplay}>Freq Asked question</button>\r\n\r\n            </div>\r\n            <div className=\"repeated\" id=\"repeated\">\r\n              <h1>You have Asked This Question :</h1>\r\n              {\r\n                rPQ.map((repeated, i) => {\r\n                  return <div className=\"div\" key={i + 1}>\r\n                    <span>{i + 1}.</span>\r\n                    <label>{repeated.rQuestion}</label>\r\n                    <span>X{repeated.qCount}</span>\r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pediction\r\n","import React, { Component } from 'react'\nimport Questions from './components/Questions'\nimport Options from './components/Options'\nimport Pediction from './components/Pediction';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      optionsCreator: ['1', '2', '3', '4'],\n      yourQuestion: '',\n      optionsforQuestion: [],\n      repeatedQuestion: []\n\n    }\n  }\n\n\n  handleAddOption = () => {\n    this.setState({ optionsCreator: [...this.state.optionsCreator, ((this.state.optionsCreator.length + 1).toString())] })\n  }\n  handleAnswerQuestions = () => {\n    const inputs = [...document.querySelectorAll('input')]\n    const q1 = inputs.shift()\n    this.setState({ yourQuestion: q1 })\n    this.setState({ optionsforQuestion: [...inputs] })\n    if (this.state.repeatedQuestion.length === 0) {\n      this.setState({ repeatedQuestion: [{ qCount: 1, rQuestion: q1.value }] })\n      console.log(this.state.repeatedQuestion)\n    } else {\n      this.state.repeatedQuestion.forEach((a, i) => {\n        if (a.rQuestion.localeCompare(q1.value) == 0) {\n          this.setState({ repeatedQuestion: [{ qCount: a.qCount + 1, rQuestion: a.rQuestion }] })\n        }\n        if (a.rQuestion.localeCompare(q1.value) === -1) {\n          this.setState({ repeatedQuestion: [...this.state.repeatedQuestion, { qCount: 1, rQuestion: q1.value }] })\n        }\n      })\n    }\n\n  }\n\n\n\n  render() {\n    return (\n      <Router>\n        <div className='App' >\n          <header><h1>arbiter</h1></header>\n          <section className=\"subHead\">Ask It, relax about It. and let us soft it 99% correct.</section>\n          <Switch>\n            <Route path='/' exact>\n              <div className=\"questionWrapper\">\n                <Questions />\n                <div>\n                  <h3>SET OPTIONS: </h3>\n                  <div className=\"Answers\" id=\"Answers\">\n                    {this.state.optionsCreator.map((num, i) => {\n                      return <Options key={i} num={Number(num)} />\n                    })}\n                  </div>\n                  <div className=\"actionBtn\">\n                    <button onClick={this.handleAddOption}>Add Option +</button>\n                    <Link to='/predict'> <button onClick={this.handleAnswerQuestions}>Answer</button></Link>\n                  </div>\n                </div>\n              </div>\n            </Route>\n            <Route path=\"/predict\">\n              <Pediction question={this.state.yourQuestion} opts={this.state.optionsforQuestion} rPQ={this.state.repeatedQuestion} />\n\n            </Route>\n          </Switch>\n        </div >\n      </Router>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}